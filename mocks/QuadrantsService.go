// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	quadrantsdomain "github.com/skyaxl/synack/pkg/maze/quadrants/quadrantsdomain"
	mock "github.com/stretchr/testify/mock"
)

// QuadrantsService is an autogenerated mock type for the QuadrantsService type
type QuadrantsService struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, spt
func (_m *QuadrantsService) Create(ctx context.Context, spt quadrantsdomain.Quadrant) (quadrantsdomain.Quadrant, error) {
	ret := _m.Called(ctx, spt)

	var r0 quadrantsdomain.Quadrant
	if rf, ok := ret.Get(0).(func(context.Context, quadrantsdomain.Quadrant) quadrantsdomain.Quadrant); ok {
		r0 = rf(ctx, spt)
	} else {
		r0 = ret.Get(0).(quadrantsdomain.Quadrant)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, quadrantsdomain.Quadrant) error); ok {
		r1 = rf(ctx, spt)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: ctx, quadrantID
func (_m *QuadrantsService) Delete(ctx context.Context, quadrantID string) error {
	ret := _m.Called(ctx, quadrantID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, quadrantID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: ctx, id
func (_m *QuadrantsService) Get(ctx context.Context, id string) (quadrantsdomain.Quadrant, error) {
	ret := _m.Called(ctx, id)

	var r0 quadrantsdomain.Quadrant
	if rf, ok := ret.Get(0).(func(context.Context, string) quadrantsdomain.Quadrant); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(quadrantsdomain.Quadrant)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAll provides a mock function with given fields: ctx, pagination
func (_m *QuadrantsService) GetAll(ctx context.Context, pagination quadrantsdomain.Pagination) (quadrantsdomain.GetAllResponse, error) {
	ret := _m.Called(ctx, pagination)

	var r0 quadrantsdomain.GetAllResponse
	if rf, ok := ret.Get(0).(func(context.Context, quadrantsdomain.Pagination) quadrantsdomain.GetAllResponse); ok {
		r0 = rf(ctx, pagination)
	} else {
		r0 = ret.Get(0).(quadrantsdomain.GetAllResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, quadrantsdomain.Pagination) error); ok {
		r1 = rf(ctx, pagination)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: ctx, quadrant
func (_m *QuadrantsService) Update(ctx context.Context, quadrant quadrantsdomain.Quadrant) (quadrantsdomain.Quadrant, error) {
	ret := _m.Called(ctx, quadrant)

	var r0 quadrantsdomain.Quadrant
	if rf, ok := ret.Get(0).(func(context.Context, quadrantsdomain.Quadrant) quadrantsdomain.Quadrant); ok {
		r0 = rf(ctx, quadrant)
	} else {
		r0 = ret.Get(0).(quadrantsdomain.Quadrant)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, quadrantsdomain.Quadrant) error); ok {
		r1 = rf(ctx, quadrant)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
